{"ast":null,"code":"export default function () {\n  let counts = {};\n  let validCounts = {};\n  let randomNumber;\n\n  for (var i = 0; i < 5; i++) {\n    let firstDigit = Math.floor(Math.random() * 10);\n    let secondDigit = Math.floor(Math.random() * 10);\n    let thirdDigit = Math.floor(Math.random() * 10);\n    let fourthDigit = Math.floor(Math.random() * 10);\n    let validDigitOne, validDigitTwo, validDigitThree, validDigitFour;\n    counts[i] = {\n      firstDigit,\n      secondDigit,\n      thirdDigit,\n      fourthDigit\n    };\n    validCounts[i] = {\n      validDigitOne,\n      validDigitTwo,\n      validDigitThree,\n      validDigitFour\n    }; //** start validation on 2 consecutive digits********// \n\n    validCounts[i].validDigitOne = counts[i].firstDigit !== counts[i].secondDigit;\n    validCounts[i].validDigitTwo = counts[i].secondDigit !== counts[i].thirdDigit && counts[i].secondDigit !== counts[i].firstDigit;\n    validCounts[i].validDigitThree = counts[i].thirdDigit !== counts[i].fourthDigit && counts[i].thirdDigit !== counts[i].secondDigit;\n    validCounts[i].validDigitFour = counts[i].fourthDigit !== counts[i].thirdDigit; //** end validation on 2 consecutive digits********// \n\n    let validRandomNumber = validCounts[i].validDigitOne && validCounts[i].validDigitTwo && validCounts[i].validDigitThree && validCounts[i].validDigitFour; // if (validRandomNumber === false) {\n    //     let firstDigit = Math.floor(Math.random() * 10);\n    //     let secondDigit = Math.floor(Math.random() * 10);\n    //     let thirdDigit = Math.floor(Math.random() * 10);\n    //     let fourthDigit = Math.floor(Math.random() * 10);\n    //     counts[i] = {\n    //         firstDigit,\n    //         secondDigit,\n    //         thirdDigit,\n    //         fourthDigit\n    //     };\n    // }\n\n    while (validRandomNumber == true) {\n      let firstDigit = Math.floor(Math.random() * 10);\n      let secondDigit = Math.floor(Math.random() * 10);\n      let thirdDigit = Math.floor(Math.random() * 10);\n      let fourthDigit = Math.floor(Math.random() * 10);\n      counts[i] = {\n        firstDigit,\n        secondDigit,\n        thirdDigit,\n        fourthDigit\n      };\n    }\n\n    randomNumber = firstDigit + \"\" + secondDigit + \"\" + thirdDigit + \"\" + fourthDigit;\n  }\n\n  return randomNumber;\n}","map":{"version":3,"sources":["D:/sowmi/clone/git/TechTest-RandomPin/src/generator.tsx"],"names":["counts","validCounts","randomNumber","i","firstDigit","Math","floor","random","secondDigit","thirdDigit","fourthDigit","validDigitOne","validDigitTwo","validDigitThree","validDigitFour","validRandomNumber"],"mappings":"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","sourcesContent":["export default function () {\n    let counts: any = {};\n    let validCounts: any = {};\n    let randomNumber;\n    for (var i = 0; i < 5; i++) {\n        let firstDigit = Math.floor(Math.random() * 10);\n        let secondDigit = Math.floor(Math.random() * 10);\n        let thirdDigit = Math.floor(Math.random() * 10);\n        let fourthDigit = Math.floor(Math.random() * 10);\n        let validDigitOne, validDigitTwo, validDigitThree, validDigitFour;\n        counts[i] = {\n            firstDigit,\n            secondDigit,\n            thirdDigit,\n            fourthDigit\n        };\n        validCounts[i] = {\n            validDigitOne,\n            validDigitTwo,\n            validDigitThree,\n            validDigitFour\n        };\n        //** start validation on 2 consecutive digits********// \n        validCounts[i].validDigitOne = (counts[i].firstDigit !== counts[i].secondDigit);\n        validCounts[i].validDigitTwo = ((counts[i].secondDigit !== counts[i].thirdDigit) && (counts[i].secondDigit !== counts[i].firstDigit));\n        validCounts[i].validDigitThree = ((counts[i].thirdDigit !== counts[i].fourthDigit) && (counts[i].thirdDigit !== counts[i].secondDigit));\n        validCounts[i].validDigitFour = ((counts[i].fourthDigit !== counts[i].thirdDigit));\n        //** end validation on 2 consecutive digits********// \n\n        let validRandomNumber = ((validCounts[i].validDigitOne && validCounts[i].validDigitTwo && validCounts[i].validDigitThree && validCounts[i].validDigitFour));\n        // if (validRandomNumber === false) {\n        //     let firstDigit = Math.floor(Math.random() * 10);\n        //     let secondDigit = Math.floor(Math.random() * 10);\n        //     let thirdDigit = Math.floor(Math.random() * 10);\n        //     let fourthDigit = Math.floor(Math.random() * 10);\n        //     counts[i] = {\n        //         firstDigit,\n        //         secondDigit,\n        //         thirdDigit,\n        //         fourthDigit\n        //     };\n        // }\n\n        while (validRandomNumber == true) {\n            let firstDigit = Math.floor(Math.random() * 10);\n            let secondDigit = Math.floor(Math.random() * 10);\n            let thirdDigit = Math.floor(Math.random() * 10);\n            let fourthDigit = Math.floor(Math.random() * 10);\n            counts[i] = {\n                firstDigit,\n                secondDigit,\n                thirdDigit,\n                fourthDigit\n            };\n          }\n        randomNumber = firstDigit + \"\" + secondDigit + \"\" + thirdDigit + \"\" + fourthDigit;\n    }\n    return randomNumber;\n}"]},"metadata":{},"sourceType":"module"}