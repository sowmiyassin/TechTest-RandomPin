{"ast":null,"code":"export default function () {\n  let counts = {};\n  let validCounts = {};\n  let randomNumber;\n\n  for (var i = 0; i < 1; i++) {\n    let firstDigit = Math.floor(Math.random() * 10);\n    let secondDigit = Math.floor(Math.random() * 10);\n    let thirdDigit = Math.floor(Math.random() * 10);\n    let fourthDigit = Math.floor(Math.random() * 10);\n    let validDigitOne, validDigitTwo, validDigitThree, validDigitFour;\n    counts[i] = {\n      firstDigit,\n      secondDigit,\n      thirdDigit,\n      fourthDigit\n    };\n    var pin = firstDigit + \"\" + secondDigit + \"\" + thirdDigit + \"\" + fourthDigit;\n    console.log(\"pin \" + pin);\n\n    let validatePIN = function (pin) {\n      if (/^(^(?!.*(11|22|33|44|55|66|77|88|99|0123|1234|2345|3456|4567|5678|6789|7890|4321|5432|6543|7654|8765|9876|0987))\\d{4}$)$/.test(pin)) {\n        return true;\n      } else {\n        return false;\n      }\n    }; //\n\n\n    let validRandomNumber = validatePIN(pin); //   ((validCounts[i].validDigitOne && validCounts[i].validDigitTwo && validCounts[i].validDigitThree && validCounts[i].validDigitFour));\n\n    if (validRandomNumber === false) {\n      let firstDigit = Math.floor(Math.random() * 10);\n      let secondDigit = Math.floor(Math.random() * 10);\n      let thirdDigit = Math.floor(Math.random() * 10);\n      let fourthDigit = Math.floor(Math.random() * 10);\n      counts[i] = {\n        firstDigit,\n        secondDigit,\n        thirdDigit,\n        fourthDigit\n      };\n    }\n\n    randomNumber = firstDigit + \"\" + secondDigit + \"\" + thirdDigit + \"\" + fourthDigit;\n  }\n\n  return randomNumber;\n}","map":{"version":3,"sources":["C:/Users/Sowmiy/Desktop/GitHubTmobile/TechTest-RandomPin/src/generator.tsx"],"names":["counts","validCounts","randomNumber","i","firstDigit","Math","floor","random","secondDigit","thirdDigit","fourthDigit","validDigitOne","validDigitTwo","validDigitThree","validDigitFour","pin","console","log","validatePIN","test","validRandomNumber"],"mappings":"AAAA,eAAe,YAAY;AA+BvB,MAAIA,MAAW,GAAG,EAAlB;AACA,MAAIC,WAAgB,GAAG,EAAvB;AACA,MAAIC,YAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AACA,QAAIC,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;AACA,QAAIE,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AACA,QAAIG,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;AACA,QAAII,aAAJ,EAAmBC,aAAnB,EAAkCC,eAAlC,EAAmDC,cAAnD;AACAd,IAAAA,MAAM,CAACG,CAAD,CAAN,GAAY;AACRC,MAAAA,UADQ;AAERI,MAAAA,WAFQ;AAGRC,MAAAA,UAHQ;AAIRC,MAAAA;AAJQ,KAAZ;AAOR,QAAIK,GAAG,GAACX,UAAU,GAAC,EAAX,GAAcI,WAAd,GAA0B,EAA1B,GAA6BC,UAA7B,GAAwC,EAAxC,GAA2CC,WAAnD;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOF,GAAnB;;AACA,QAAIG,WAAW,GAAG,UAASH,GAAT,EAAoB;AACpC,UAAI,2HAA2HI,IAA3H,CAAgIJ,GAAhI,CAAJ,EAA0I;AACxI,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF,KAND,CAfgC,CAuBhC;;;AAGQ,QAAIK,iBAAiB,GAAGF,WAAW,CAACH,GAAD,CAAnC,CA1BwB,CA2B3B;;AACG,QAAIK,iBAAiB,KAAK,KAA1B,EAAiC;AAC7B,UAAIhB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AACA,UAAIC,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;AACA,UAAIE,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AACA,UAAIG,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;AACAP,MAAAA,MAAM,CAACG,CAAD,CAAN,GAAY;AACRC,QAAAA,UADQ;AAERI,QAAAA,WAFQ;AAGRC,QAAAA,UAHQ;AAIRC,QAAAA;AAJQ,OAAZ;AAMH;;AAEDR,IAAAA,YAAY,GAAGE,UAAU,GAAG,EAAb,GAAkBI,WAAlB,GAAgC,EAAhC,GAAqCC,UAArC,GAAkD,EAAlD,GAAuDC,WAAtE;AACH;;AACD,SAAOR,YAAP;AACH","sourcesContent":["export default function () {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n    let counts: any = {};\r\n    let validCounts: any = {};\r\n    let randomNumber;\r\n    for (var i = 0; i < 1; i++) {\r\n        let firstDigit = Math.floor(Math.random() * 10);\r\n        let secondDigit = Math.floor(Math.random() * 10);\r\n        let thirdDigit = Math.floor(Math.random() * 10);\r\n        let fourthDigit = Math.floor(Math.random() * 10);\r\n        let validDigitOne, validDigitTwo, validDigitThree, validDigitFour;\r\n        counts[i] = {\r\n            firstDigit,\r\n            secondDigit,\r\n            thirdDigit,\r\n            fourthDigit\r\n        };\r\n        \r\nvar pin=firstDigit+\"\"+secondDigit+\"\"+thirdDigit+\"\"+fourthDigit;\r\nconsole.log(\"pin \"+pin);\r\nlet validatePIN = function(pin : any) {\r\n  if (/^(^(?!.*(11|22|33|44|55|66|77|88|99|0123|1234|2345|3456|4567|5678|6789|7890|4321|5432|6543|7654|8765|9876|0987))\\d{4}$)$/.test(pin)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n//\r\n\r\n\r\n        let validRandomNumber = validatePIN(pin);\r\n     //   ((validCounts[i].validDigitOne && validCounts[i].validDigitTwo && validCounts[i].validDigitThree && validCounts[i].validDigitFour));\r\n        if (validRandomNumber === false) {\r\n            let firstDigit = Math.floor(Math.random() * 10);\r\n            let secondDigit = Math.floor(Math.random() * 10);\r\n            let thirdDigit = Math.floor(Math.random() * 10);\r\n            let fourthDigit = Math.floor(Math.random() * 10);\r\n            counts[i] = {\r\n                firstDigit,\r\n                secondDigit,\r\n                thirdDigit,\r\n                fourthDigit\r\n            };\r\n        }\r\n        \r\n        randomNumber = firstDigit + \"\" + secondDigit + \"\" + thirdDigit + \"\" + fourthDigit;\r\n    }\r\n    return randomNumber;\r\n}"]},"metadata":{},"sourceType":"module"}